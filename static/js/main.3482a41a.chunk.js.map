{"version":3,"sources":["store/reducers/index.js","store/actions/actions-types.js","store/index.js","backendEP.js","components/layout/Navbar.jsx","components/track/Track.jsx","components/layout/Spinner.jsx","components/track/TrackList.jsx","components/track/Search.jsx","store/actions/index.js","components/layout/Home.jsx","components/track/Lyrics.jsx","App.jsx","serviceWorker.js","index.js"],"names":["rootReducer","state","action","type","payload","Object","objectSpread","trackList","heading","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","topTracks","concat","process","oneTrack","specificTrack","trackDetail","Navbar","react_default","a","createElement","className","Link","to","track_Track","_ref","track","track_name","artist_name","album_name","track_id","layout_Spinner","TrackList","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","undefined","keys","length","react","map","item","Component","connect","Search","_getPrototypeOf2","_this","_len","args","Array","_key","call","trackTitle","handleInput","e","setState","defineProperty","target","name","onSubmit","preventDefault","searchTrack","placeholder","onChange","autoComplete","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","response","json","wrap","_context2","prev","next","fetch","replace","sent","message","body","track_list","stop","_x2","Home","components_track_Search","track_TrackList","Lyrics","lyrics","_componentDidMount","_callee","lyricsResponse","lyricsJson","trackResponse","trackJson","_context","match","params","id","lyrics_body","_this$state$track","App","loadTracks","HashRouter","Switch","Route","exact","path","component","_x","Boolean","location","hostname","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3482a41a.chunk.js","sourcesContent":["import {\r\n  LOAD_TRACKS,\r\n  SEARCH_TRACK\r\n} from '../actions/actions-types'\r\n\r\nconst rootReducer = (state, action) => {\r\n  const {\r\n    type,\r\n    payload\r\n  } = action\r\n  switch (type) {\r\n    case LOAD_TRACKS:\r\n      return {\r\n        ...state,\r\n        trackList: payload\r\n      }\r\n    case SEARCH_TRACK:\r\n      return {\r\n        ...state,\r\n        trackList: payload,\r\n        heading: 'Search Results'\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default rootReducer","const LOAD_TRACKS = 'LOAD_TRACKS'\r\nconst SEARCH_TRACK = 'SEARCH_TRACK'\r\n\r\nexport {\r\n  LOAD_TRACKS,\r\n  SEARCH_TRACK\r\n}","import {\r\n  createStore,\r\n  applyMiddleware,\r\n  compose\r\n} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {\r\n  trackList: [],\r\n  heading: 'Top 10 Tracks in Colombia'\r\n}\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, initialState, storeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store","const topTracks = `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=co&f_has_lyrics=1&apikey=${\r\n  process.env.REACT_APP_MM_KEY\r\n}`\r\n\r\nconst oneTrack = `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=$track_title&page_size=10&page=1&s_track_rating=desc&apikey=${\r\n  process.env.REACT_APP_MM_KEY\r\n}`\r\n\r\nconst specificTrack = `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=$id&apikey=${\r\n  process.env.REACT_APP_MM_KEY\r\n}`\r\n\r\nconst trackDetail = `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=$id&apikey=${\r\n  process.env.REACT_APP_MM_KEY\r\n}`\r\n\r\nexport { topTracks, oneTrack, specificTrack, trackDetail }\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-info mb-4\">\r\n      <Link className=\"navbar-brand mx-auto\" to=\"/\">\r\n        Lyrics Search\r\n      </Link>\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Track.scss'\r\n\r\nexport default ({ track }) => {\r\n  const { track_name, artist_name, album_name, track_id } = track\r\n  return (\r\n    <div className=\"col-lg-4 col-md-6\">\r\n      <div className=\"track-card\">\r\n        <p className=\"label\">Song Name</p>\r\n        <h6 className=\"mb-4\">{track_name}</h6>\r\n        <p className=\"label\">Artist Name</p>\r\n        <p>{artist_name}</p>\r\n        <p className=\"label\">Album</p>\r\n        <p>{album_name}</p>\r\n        <Link to={`lyrics/track/${track_id}`} className=\"button\">\r\n          View Lyrics <i className=\"fas fa-arrow-right\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport './Spinner.scss'\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"w-100 mt-5 d-flex justify-content-center\">\r\n      <div className=\"spinner\" />\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Track from './Track'\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst mapStateToProps = state => {\r\n  return { trackList: state.trackList, heading: state.heading }\r\n}\r\n\r\nconst TrackList = class extends Component {\r\n  render() {\r\n    var { trackList, heading } = this.props\r\n    if (trackList === undefined || Object.keys(trackList).length === 0) {\r\n      return <Spinner />\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <h2 className=\"text-center font-weight-bold mb-4 text-secondary\">\r\n            {heading}\r\n          </h2>\r\n          <div className=\"row\">\r\n            {trackList.map(item => {\r\n              return <Track key={item.track.track_id} track={item.track} />\r\n            })}\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TrackList)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { searchTrack } from '../../store/actions'\r\n\r\nimport './Search.scss'\r\n\r\nconst Search = class extends Component {\r\n  state = {\r\n    trackTitle: ''\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.searchTrack(this.state.trackTitle)\r\n    this.setState({ trackTitle: '' })\r\n  }\r\n\r\n  render() {\r\n    const { trackTitle } = this.state\r\n    return (\r\n      <div>\r\n        <h2 className=\"text-secondary text-center mb-2\">Search for Lyrics</h2>\r\n        <form className=\"mb-4\" onSubmit={this.onSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"trackTitle\"\r\n            placeholder=\"Search for a Song...\"\r\n            value={trackTitle}\r\n            onChange={this.handleInput}\r\n            autoComplete=\"off\"\r\n          />\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { searchTrack }\r\n)(Search)\r\n","import {\r\n  LOAD_TRACKS,\r\n  SEARCH_TRACK\r\n} from './actions-types'\r\nimport {\r\n  topTracks,\r\n  oneTrack\r\n} from '../../backendEP'\r\n\r\nconst loadTracks = () => async dispatch => {\r\n  const response = await fetch(topTracks)\r\n  const json = await response.json()\r\n  dispatch({\r\n    type: LOAD_TRACKS,\r\n    payload: json.message.body.track_list\r\n  })\r\n}\r\n\r\nconst searchTrack = (payload) => async dispatch => {\r\n  const response = await fetch(oneTrack.replace('$track_title', payload))\r\n  const json = await response.json()\r\n  dispatch({\r\n    type: SEARCH_TRACK,\r\n    payload: json.message.body.track_list\r\n  })\r\n}\r\n\r\nexport {\r\n  loadTracks,\r\n  searchTrack\r\n}","import React from 'react'\r\n\r\nimport TrackList from '../track/TrackList'\r\nimport Search from '../track/Search'\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Search />\r\n      <TrackList />\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { specificTrack, trackDetail } from '../../backendEP'\r\nimport Spinner from '../layout/Spinner'\r\n\r\nimport './Lyrics.scss'\r\n\r\nconst Lyrics = class extends Component {\r\n  state = {\r\n    lyrics: '',\r\n    track: {}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const lyricsResponse = await fetch(\r\n      specificTrack.replace('$id', this.props.match.params.id)\r\n    )\r\n    const lyricsJson = await lyricsResponse.json()\r\n    this.setState({ lyrics: lyricsJson.message.body.lyrics.lyrics_body })\r\n\r\n    const trackResponse = await fetch(\r\n      trackDetail.replace('$id', this.props.match.params.id)\r\n    )\r\n    const trackJson = await trackResponse.json()\r\n\r\n    this.setState({ track: trackJson.message.body.track })\r\n  }\r\n\r\n  render() {\r\n    const { lyrics } = this.state\r\n    const { track_name, artist_name } = this.state.track\r\n\r\n    if (\r\n      lyrics === undefined ||\r\n      lyrics.length === 0 ||\r\n      track_name === undefined\r\n    ) {\r\n      return (\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"button-go-back\">\r\n            Go Back\r\n          </Link>\r\n\r\n          <div className=\"mt-4\">\r\n            <Spinner />\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"button-go-back\">\r\n            Go Back\r\n          </Link>\r\n\r\n          <div className=\"mt-4\">\r\n            <h1 className=\"mb-2\">\r\n              Lyrics for \"{track_name}\" by {artist_name}\r\n            </h1>\r\n            <p>{lyrics}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Lyrics\r\n","import React, { Component, Fragment } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { loadTracks } from './store/actions'\n\nimport Navbar from './components/layout/Navbar'\nimport Home from './components/layout/Home'\nimport Lyrics from './components/track/Lyrics'\n\nimport './App.scss'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.loadTracks()\n  }\n\n  render() {\n    return (\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n          </Switch>\n        </Fragment>\n      </Router>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { loadTracks }\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\nimport './index.scss'\nimport App from './App.jsx'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}